name: public_stack

volumes:
  jellyfin_cache:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/violet/docker-volumes/jellyfin_cache

  jellyfin_config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/violet/docker-volumes/jellyfin_config

  serpbear_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/violet/docker-volumes/serpbear_data

  ntfy_cache:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${NTFY_CACHE_VOLUME_DIR}

  ntfy_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${NTFY_DATA_VOLUME_DIR}

  ntfy_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${NTFY_VOLUME_DIR}


networks:
  public_net:
    external: true
  
  mysql_net:
    external: true

services:
  pubic__jellyfin:
    container_name: public__jellyfin
    image: jellyfin/jellyfin
    user: 1000:1000
    restart: unless-stopped
    networks:
      - public_net
    volumes:
      - jellyfin_cache:/cache
      - jellyfin_config:/config
      - type: bind
        source: /mnt/blue/movies
        target: /media
    environment:
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_URL}

  pubic__serpbear:
    networks:
      - public_net
    volumes:
      - serpbear_data:/app/data
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_APP_URL=${SERPBEAR_PUBLIC_URL}
      - USER=${SERPBEAR_USER}
      - PASSWORD=${SERPBEAR_PASSWORD}
      - SECRET=${SERPBEAR_API_SECRET}
      - APIKEY=${SERPBEAR_API_KEY}
    container_name: public__serpbear
    image: towfiqi/serpbear

  public__ntfy:
    container_name: public__ntfy
    image: binwiederhier/ntfy
    command:
      - serve
    environment:
      - TZ=${NTFY_TZ}
      - NTFY_UPSTREAM_BASE_URL=https://ntfy.sh
      - NTFY_ENABLE_LOGIN=true
      - NTFY_CACHE_FILE=/var/lib/ntfy/cache.db
      - NTFY_AUTH_FILE=/var/lib/ntfy/auth.db
      - NTFY_ATTACHMENT_CACHE_DIR=/var/lib/ntfy/attachments
      - NTFY_BASE_URL=${NTFY_BASE_URL}
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
    volumes:
      - ntfy_cache:/var/cache/ntfy
      - ntfy_data:/etc/ntfy
      - ntfy_volume:/var/lib/ntfy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - public_net

  public__umami:
    container_name: public__umami
    image: ghcr.io/umami-software/umami:mysql-latest
    environment:
      DATABASE_URL: ${UMAMI_DATABASE_URL}
      DATABASE_TYPE: mysql
      APP_SECRET: ${UMAMI_APP_SECRET}
    restart: always
    networks:
      - public_net
      - mysql_net
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
